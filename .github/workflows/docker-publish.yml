name: Docker

on:
  push:
    tags:
      - v*
  pull_request:

env:
  IMAGE_NAME: OpenAlprWebhookProcessor

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run build
        run: docker build . --file ./OpenAlprWebhookProcessor/Dockerfile
  
  back-end-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup .NET
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 7.x

      - name: Restore Dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --no-restore

      - name: Test
        run: dotnet test --configuration Release --no-build --collect:"XPlat Code Coverage" --results-directory ./coverage

      - name: Code Coverage Report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: coverage/**/coverage.cobertura.xml
          badge: true
          fail_below_min: true
          format: markdown
          hide_branch_rate: false
          hide_complexity: true
          indicators: true
          output: both
          thresholds: '0 80'
  
      - name: Add Coverage PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request'
        with:
          recreate: true
          path: code-coverage-results.md

  front-end-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run frontend tests
        working-directory: ./OpenAlprWebhookProcessor/angularapp
        run: |
          npm ci
          npm run test:prod
          npm run lint

  windows-build-push:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    steps:
      - name: Check out the repo
        uses: actions/checkout@main

      - name: Setup Buildx
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '7.x'
          include-prerelease: true

      - name: Build Artifact
        run: |
          tag=$(git describe --tags --abbrev=0)
          release_name="OpenAlprWebHookProcessor-${tag}-windows64"
          dotnet restore "OpenAlprWebhookProcessor/OpenAlprWebhookProcessor.csproj"
          dotnet build "OpenAlprWebhookProcessor/OpenAlprWebhookProcessor.csproj" -c Release
          dotnet publish "OpenAlprWebhookProcessor/OpenAlprWebhookProcessor.csproj" -c Release -o "$release_name"
          tar czvf "${release_name}.tar.gz" "$release_name"

      - name: Publish
        uses: softprops/action-gh-release@v1
        if: contains(github.ref, 'alpha') != true
        with:
          files: "OpenAlprWebHookProcessor*"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Publish
        uses: softprops/action-gh-release@v1
        if: contains(github.ref, 'alpha')
        with:
          files: "OpenAlprWebHookProcessor*"
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  docker-build-push:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
        
      - name: Setup Buildx
        uses: docker/setup-buildx-action@v1
      
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_PASSWORD }}

      - name: Get git tag
        id: get_version
        run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\//}

      - name: Push to Docker Hub
        if: contains(github.ref, 'alpha') != true
        uses: docker/build-push-action@v2
        with:
          file: ./OpenAlprWebhookProcessor/Dockerfile
          push: true
          tags: |
            mlapaglia/openalprwebhookprocessor:${{ steps.get_version.outputs.VERSION }}
            mlapaglia/openalprwebhookprocessor:latest

      - name: Push alpha build to Docker Hub
        if: contains(github.ref, 'alpha')
        uses: docker/build-push-action@v2
        with:
          file: ./OpenAlprWebhookProcessor/Dockerfile
          push: true
          tags: |
            mlapaglia/openalprwebhookprocessor:${{ steps.get_version.outputs.VERSION }}